{"version":3,"sources":["Btn/Btn.js","Home/Home.js","utils/SpidermanContext.js","Back/Back.js","Spiderman/Spiderman.jsx","Gallery/Gallery.js","Stepone/Stepone.js","Steptwo/Steptwo.js","Stepthree/Stepthree.js","Stepfour/Stepfour.js","Create/Create.js","App.js","serviceWorker.js","index.js"],"names":["Btn","props","className","texto","Home","history","useHistory","src","alt","onClick","push","SpidermanContext","React","config","id","name","actor","mask","accessory1","accessory2","accessory3","suit","colorOne","colorTwo","fondo","setConfig","list","setList","Back","href","dir","Spiderman","Gallery","context","useContext","to","length","map","spidey","index","findIndex","elem","handleEditSpiderman","console","log","slice","handleDeleteSpiderman","Stepone","handleActor","TextField","label","value","onChange","event","target","htmlFor","type","checked","class","Steptwo","colors","handleSuit","handleColorOne","handleColorTwo","col","Stepthree","handleBg","bg","Stepfour","newSpidey","v4","domtoimage","toBlob","document","getElementById","then","blob","window","saveAs","Create","match","handleStep","step","path","exact","component","App","useState","useEffect","listString","localStorage","getItem","JSON","parse","setItem","stringify","Provider","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d9d5776c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Btn.css';\r\n\r\nconst Btn = (props) => {\r\n    \r\n    \r\n    return (\r\n    <button className=\"btn\">{props.texto}</button>\r\n    );\r\n  }\r\n\r\n  Btn.propTypes = {\r\n    texto: PropTypes.string,\r\n}\r\n  \r\n  export default Btn;","import React from 'react';\r\nimport './Home.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Btn from '../Btn/Btn';\r\n\r\nfunction Home() {\r\n\r\n  const history = useHistory();\r\n\r\n  const handleCreate = () => {\r\n    history.push('/crear/pasouno');\r\n  }\r\n  const handleGallery = () => {\r\n    history.push('/galeria');\r\n  }\r\n\r\n    return (\r\n      <div className=\"inicio\">\r\n\r\n        <img className=\"inicio__img\" src=\"./data/inicio.png\" alt=\" \"/>\r\n        <button className=\"btn\" onClick={handleCreate}>CREAR SPIDERMAN</button>\r\n        <button className=\"btn\" onClick={handleGallery}>GALERÍA</button>\r\n\r\n        {/* <p className=\"inicio__copy\">© KAREN CASTAÑEDA</p> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;","import * as React from 'react';\r\n\r\nexport const SpidermanContext = React.createContext({\r\n    config : {\r\n        id : '',\r\n        name : '',\r\n        actor : '/data/tobey.png',\r\n        mask : false,\r\n        accessory1 : false,\r\n        accessory2 : false,\r\n        accessory3 : false,\r\n        suit : 1,\r\n        colorOne : '',\r\n        colorTwo : '',\r\n        fondo : 1,\r\n      },\r\n    setConfig : () => null,\r\n\r\n    list : [],\r\n    setList : () => null,\r\n})","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Back.css';\r\n\r\nconst Back = (props) => {\r\n    return (\r\n        <a href={props.dir}>\r\n            <button className=\"back\">\r\n                <img className=\"back__img\" src=\"/data/back.png\"/>\r\n            </button>\r\n        </a>\r\n    );\r\n}\r\n    \r\nBack.propTypes = {\r\n    dir: PropTypes.string,\r\n}\r\n      \r\nexport default Back;","import React from 'react';\r\nimport './Spiderman.css';\r\nimport PropTypes from 'prop-types';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\n\r\nconst Spiderman = (props) => {\r\n\r\n//     const context = React.useContext(SpidermanContext);\r\n//     const handleEdit = (id)=>{\r\n//          onEdit(id);\r\n//     }\r\n\r\n//     const handleDelete = (id)=>{\r\n//         onEdit(id);\r\n//    }\r\n\r\n    return(\r\n        <div className=\"spiderman__container\" >\r\n            <div className=\"spiderman__charactername\">\r\n                <p className=\"tittle\">{props.name}</p>\r\n            </div>\r\n\r\n            <div className=\"spiderman__background\" id=\"download\">\r\n                <img className=\"spiderman__backgroundimg\" \r\n                src={'./data/fondo' + props.fondo + '.png'}/>\r\n\r\n                <div className=\"spiderman__body\" >\r\n                    {/* <div className=\"character__accessory1\">\r\n                        {props.accessory1 && <img src = './data/accessory1.png'/>}\r\n                    </div> */}\r\n                    <div className=\"spiderman__head\">\r\n                        {props.mask && \r\n                        <img src = {'./data/mascara' + props.suit + '_color' + props.colorOne + '.png'}/>}\r\n                        {!props.mask && <img src= {'./data/' + props.actor + '.png'} />}\r\n                    </div>\r\n                    <div className=\"spiderman__color1\">\r\n                        <img src={'./data/traje' + props.suit + '_parte1_color' + props.colorOne + '.png'}/>\r\n                    </div>\r\n                    <div className=\"spiderman__color2\">\r\n                        <img src={'./data/traje' + props.suit + '_parte2_color' + props.colorTwo + '.png'}/>\r\n                    </div>\r\n                    {/* <div className=\"character__accessory2\">\r\n                        {props.accessory2 && <img src = './data/accessory2.png'/>}\r\n                    </div>\r\n                    <div className=\"character__accessory3\">\r\n                        {props.accessory3 && <img src = './data/accessory3.png'/>}\r\n                    </div> */}\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {/* {onDelete && onEdit && <div>\r\n                <button onClick = {handleEdit}>Edit</button>\r\n                <button onClick = {handleEdit}>Delete</button>\r\n            </div>} */}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nSpiderman.propTypes = {\r\n    id : PropTypes.string,\r\n    name : PropTypes.string,\r\n    actor : PropTypes.string,\r\n    mask : PropTypes.bool,\r\n    accessory1 : PropTypes.bool,\r\n    accessory2 : PropTypes.bool,\r\n    accessory3 : PropTypes.bool,\r\n    suit : PropTypes.number,\r\n    colorOne : PropTypes.string,\r\n    colorTwo : PropTypes.string,\r\n    fondo : PropTypes.number,\r\n    // onEdit : PropTypes.func,\r\n    // onDelete : PropTypes.func,\r\n}\r\n      \r\nexport default Spiderman;","import React from 'react';\r\nimport './Gallery.css';\r\nimport { Link , Route, useHistory} from 'react-router-dom';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\nimport Back from '../Back/Back';\r\nimport Btn from '../Btn/Btn';\r\nimport Spiderman from '../Spiderman/Spiderman';\r\n\r\nconst Gallery = (props) => {\r\n\r\n    const context = React.useContext(SpidermanContext);\r\n    const history = useHistory()\r\n    const btn1 = \"CREA UNO\";\r\n\r\n    const handleEditSpiderman = (id)=>{\r\n        // onEdit(id);\r\n        const index = context.list.findIndex((elem) => {\r\n            return elem.id === id;\r\n        });\r\n        \r\n        const spidey = context.list[index];\r\n\r\n        context.setConfig({\r\n            id : spidey.id,\r\n            name : spidey.name,\r\n            actor : spidey.actor,\r\n            mask : spidey.mask,\r\n            accessory1 : spidey.accessory1,\r\n            accessory2 : spidey.accessory2,\r\n            accessory3 : spidey.accessory3,\r\n            suit : spidey.suit,\r\n            colorOne : spidey.colorOne,\r\n            colorTwo : spidey.colorTwo,\r\n            fondo : spidey.fondo,\r\n        });\r\n\r\n        history.push('/crear/pasouno');\r\n\r\n        // context.setList([\r\n        //     ...context.list.slice(0 , index),\r\n        //     ...context.list.slice(index + 1),\r\n        // ])\r\n    }\r\n\r\n    const handleDeleteSpiderman = (id)=>{\r\n        // onEdit(id);\r\n        const index = context.list.findIndex((elem) => {\r\n            return elem.id === id;\r\n        });\r\n        console.log()\r\n        context.setList([\r\n            ...context.list.slice(0 , index),\r\n            ...context.list.slice(index + 1),\r\n        ])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"gallery__header\">\r\n                <div className=\"gallery__back\">\r\n                    <Link to=\"/\"><Back /></Link>\r\n                </div>\r\n                <div className=\"gallery__tittle\">\r\n                    <img src=\"/data/galeria.png\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"gallery\">\r\n\r\n                {context.list.length=== 0 &&\r\n                    <div className=\"gallery__empty\">\r\n                        <img className=\"gallery__emptyimg\" src=\"./data/empty.png\"/>\r\n                        <div className=\"gallery__emptybtn\">\r\n                            <Link to=\"/crear/pasouno\"><Btn texto={\"CREA UNO\"} /></Link>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {context.list.length > 0 &&\r\n                    <div className=\"module__container\">                    \r\n                        {context.list.map(spidey => {\r\n                            return(\r\n                            <div className=\"module\">    \r\n                                <Spiderman \r\n                                    id = {spidey.id}\r\n                                    name = {spidey.name}\r\n                                    actor = {spidey.actor} \r\n                                    mask = {spidey.mask} \r\n                                    accessory1 = {spidey.accessory1} \r\n                                    accessory2 = {spidey.accessory2} \r\n                                    accessory3 = {spidey.accessory3} \r\n                                    suit = {spidey.suit} \r\n                                    colorOne = {spidey.colorOne} \r\n                                    colorTwo = {spidey.colorTwo} \r\n                                    fondo = {spidey.fondo}\r\n                                />\r\n                                <div>\r\n                                    <button className=\"btn__small\" onClick={()=>handleEditSpiderman(spidey.id)}>EDITAR</button>\r\n                                    <button className=\"btn__delete\" onClick={()=>handleDeleteSpiderman(spidey.id)}></button>\r\n                                </div>\r\n                            </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n                \r\n\r\n            </div>\r\n\r\n             {/* --------------- EMPTY STATE --------------- */}\r\n            {/*\r\n            <div className=\"gallery__empty\">\r\n                <img className=\"gallery__emptyimg\" src=\"/data/empty.png\"/>\r\n                <div className=\"gallery__emptybtn\">\r\n                    <Btn texto={btn1}/>\r\n                </div>\r\n            </div>\r\n            */}\r\n        </div>\r\n    );\r\n}\r\n    \r\nGallery.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Gallery;","import React from 'react';\r\nimport './Stepone.css';\r\nimport {TextField, Typography} from '@material-ui/core';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\n\r\nconst Stepone = (props) => {\r\n\r\n    const context = React.useContext(SpidermanContext);\r\n    var actors = ['tobey', 'andrew', 'tom'];\r\n    \r\n    const handleName = (event) => {\r\n        context.setConfig({\r\n            ...context.config,\r\n            name : event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleMask = (event) => {\r\n        // if(!context.config.actor && context.config.mask){\r\n        if(context.config.mask){\r\n            context.setConfig({\r\n                ...context.config,\r\n                mask : false,\r\n                // actor : 'tobey',\r\n            })\r\n        } else {\r\n            context.setConfig({\r\n                ...context.config,\r\n                mask : true,\r\n                // actor : '',\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    const handleActor = (actor) => {\r\n\r\n        if(context.config.actor === actor){\r\n            if(context.config.mask){\r\n                context.setConfig({\r\n                   ...context.config,\r\n                   mask : false,\r\n                })\r\n            } else {\r\n                context.setConfig({\r\n                    ...context.config,\r\n                    mask : true,\r\n                }) \r\n            }\r\n        } else if(context.config.actor !== actor){\r\n             context.setConfig({\r\n                 ...context.config,\r\n                 actor : actor,\r\n                 mask : false,\r\n             })\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <p className=\"tittle\">NOMBRE DE TU PERSONAJE</p>\r\n            <TextField \r\n                label =\"Nombre\"\r\n                value = {context.config.name}\r\n                onChange = {handleName}\r\n            />\r\n\r\n            <p className=\"tittle\">MÁSCARA</p>\r\n\r\n            <label htmlFor=\"\" className=\"switch\" >\r\n                <input type=\"checkbox\"  checked={context.config.mask}/>\r\n                <span class=\"slider round\" onClick={handleMask}></span>\r\n            </label>\r\n\r\n            {/* <input type=\"checkbox\" onChange={handleMask} checked={context.config.mask}/> */}\r\n\r\n            <p className=\"tittle\">ESCOGE TU ACTOR FAVORITO</p>\r\n            <div className=\"stepone__actors\">\r\n                {actors.map(actor =>{\r\n                    return <div className=\"stepone__actorbtn\">               \r\n                        {!context.config.mask && context.config.actor === actor &&\r\n                        <div className=\" btn__image \" onClick={()=>handleActor(actor)}>\r\n                            <img className=\"btn__image--selected\" src={'./data/' + actor + 'btn.png'} />\r\n                        </div>\r\n                        }\r\n\r\n                        {(context.config.mask || context.config.actor !== actor) &&\r\n                        <div className=\"btn__image\" onClick={()=>handleActor(actor)}>\r\n                            <img src={'./data/' + actor + 'btn.png'} />\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n    \r\nStepone.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Stepone;","import React from 'react';\r\nimport './Steptwo.css';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\n\r\nconst Steptwo = (props) => {\r\n\r\n    var suits = [1,2,3,4];\r\n    var colors = ['rojo', 'azul', 'negro'];\r\n    var accesories = [1, 2, 3];\r\n    \r\n    const context = React.useContext(SpidermanContext);\r\n\r\n    const handleSuit = (suit) => {\r\n        context.setConfig({\r\n            ...context.config,\r\n            suit : suit,\r\n        })\r\n    };\r\n\r\n    const handleColorOne = (colorOne) => {\r\n        context.setConfig({\r\n            ...context.config,\r\n            colorOne : colorOne,\r\n        })\r\n    };\r\n\r\n    const handleColorTwo = (colorTwo) => {\r\n        context.setConfig({\r\n            ...context.config,\r\n            colorTwo : colorTwo,\r\n        })\r\n    };\r\n\r\n    // const handleAccessory = (accessory) => {\r\n    //     var acce = 'accessory' + accessory;\r\n    //         context.setConfig({\r\n    //          ...context.config,\r\n    //          [acce] : !context.config[acce],\r\n    //      })\r\n    // };\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n            <p className=\"tittle\">TRAJE</p>\r\n            <div className=\"stepthree__suits\">\r\n                {suits.map(suit =>{\r\n                    return <div className=\"stepthree__suitbtn\">               \r\n                        {context.config.suit === suit && \r\n                            <div className=\"btn__image\" onClick={()=>handleSuit(suit)}>\r\n                                <img className=\"btn__image--selected\" src={'./data/suit' + suit + '.png'}/>\r\n                            </div>\r\n                        }\r\n\r\n                        {context.config.suit !== suit && \r\n                            <div className=\"btn__image\" onClick={()=>handleSuit(suit)}>\r\n                                <img src={'./data/suit' + suit + '.png'}/>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                })}\r\n            </div>\r\n            \r\n\r\n            <div className=\"stepthree__colors\">\r\n                <div>\r\n                    <p className=\"tittle\">COLOR PRIMARIO</p>\r\n                    <div className=\"stepthree__colorbuttons\">\r\n                        {colors.map(col =>{\r\n                            return <div className=\"stepthree__colorbtn\">               \r\n                                {context.config.colorOne === col && \r\n                                    <div className=\"btn__color--selected btn__color\" onClick={()=>handleColorOne(col)}>\r\n                                        <img src={'./data/' + col + 'btn.png'}/>\r\n                                    </div>\r\n                                }\r\n\r\n                                {context.config.colorOne !== col && \r\n                                    <div className=\"btn__color\" onClick={()=>handleColorOne(col)}>\r\n                                        <img src={'./data/' + col + 'btn.png'}/>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p className=\"tittle\">COLOR SECUNDARIO</p>\r\n                    <div className=\"stepthree__colorbuttons\">\r\n                        {colors.map(col =>{\r\n                            return <div className=\"stepthree__colorbtn\">               \r\n                                {context.config.colorTwo === col && \r\n                                    <div className=\"btn__color--selected btn__color\" onClick={()=>handleColorTwo(col)}>\r\n                                        <img src={'./data/' + col + 'btn.png'}/>\r\n                                    </div>\r\n                                }\r\n\r\n                                {context.config.colorTwo !== col && \r\n                                    <div className=\"btn__color\" onClick={()=>handleColorTwo(col)}>\r\n                                        <img src={'./data/' + col + 'btn.png'}/>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* ---------------Accesorios---------------- */}\r\n\r\n            {/* <p>ACCESORIOS</p>\r\n\r\n            <div className=\"steptwo__accessories\">\r\n                {accesories.map( accessory =>{\r\n                    return <div className=\"steptwo__accessorybtn\">\r\n                        \r\n                        {context.config['accessory' + accessory] &&\r\n                            <button className=\"stepone__facebtn button__selected\" onClick={()=>handleAccessory(accessory)}>\r\n                                <img src={'./data/btnAccessory' + accessory + '.png'} />\r\n                            </button>\r\n                        }\r\n\r\n                        {!context.config['accessory' + accessory] &&\r\n                            <button className=\"stepone__facebtn \" onClick={()=>handleAccessory(accessory)}>\r\n                                <img src={'./data/btnAccessory' + accessory + '.png'} />\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                })}\r\n            </div> */}\r\n        </div>\r\n    );\r\n\r\n}\r\n    \r\nSteptwo.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Steptwo;\r\n\r\n// Otra forma de hacer lo de la máscara con énfasis en la máscara\r\n// if(context.config.mask){\r\n        //     context.setConfig({\r\n        //          ...context.config,\r\n        //          actor : actor,\r\n        //          mask : false,\r\n        //     })\r\n        // } else {\r\n        //     if(context.config.actor === actor){\r\n        //         context.setConfig({\r\n        //             ...context.config,\r\n        //             mask : true,\r\n        //        })\r\n        //     } else {\r\n        //         context.setConfig({\r\n        //             ...context.config,\r\n        //             actor : actor,\r\n        //        })\r\n        //     }\r\n        // }","import React from 'react';\r\nimport './Stepthree.css';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { v4 } from 'uuid';\r\n\r\nconst Stepthree = (props) => {\r\n\r\n    const context = React.useContext(SpidermanContext);\r\n    const history = useHistory();\r\n\r\n    var bgs = [1,2,3];\r\n\r\n    const handleBg = (fondo) => {\r\n        context.setConfig({\r\n            ...context.config,\r\n            fondo : fondo,\r\n        })\r\n    };\r\n\r\n    // const handleFinish = () => {\r\n    //     const newSpidey = {\r\n    //         id : context.config.id,\r\n    //         name : context.config.name,\r\n    //         actor : context.config.actor,\r\n    //         mask : context.config.mask,\r\n    //         accessory1 : context.config.accessory1,\r\n    //         accessory2 : context.config.accessory2,\r\n    //         accessory3 : context.config.accessory3,\r\n    //         suit : context.config.suit,\r\n    //         colorOne : context.config.colorOne,\r\n    //         colorTwo : context.config.colorTwo,\r\n    //         fondo : context.config.fondo,\r\n    //     };\r\n\r\n    //     context.setConfig({\r\n    //         id : '',\r\n    //         name : 'Mi primer Spiderman',\r\n    //         actor : 'tobey',\r\n    //         mask : true,\r\n    //         accessory1 : false,\r\n    //         accessory2 : false,\r\n    //         accessory3 : false,\r\n    //         suit : 1,\r\n    //         colorOne : 'rojo',\r\n    //         colorTwo : 'azul',\r\n    //         fondo : 1,\r\n    //     });\r\n\r\n    //     const index = context.list.findIndex((elem) => {\r\n    //         return elem.id === newSpidey.id;\r\n    //     });\r\n\r\n    //     if(index === -1){\r\n    //         newSpidey.id = v4();\r\n    //         context.setList([\r\n    //             ...context.list,\r\n    //             newSpidey,\r\n    //         ]);\r\n    //     } else {\r\n    //         context.setList([\r\n    //             ...context.list.slice(0,index),\r\n    //             newSpidey,\r\n    //             ...context.list.slice(index+1)\r\n    //         ]);\r\n    //     }\r\n    //     history.push('/crear/pasocuatro');\r\n    // };\r\n\r\n    const handleFinish = () => {\r\n        history.push('/crear/pasocuatro');\r\n    }\r\n\r\n    return(\r\n        <div className=\"stepthree__container\">\r\n            <p className=\"tittle\">FONDO</p>\r\n            <div className=\"stepfour__bgs\">\r\n                {bgs.map(bg =>{\r\n                    return <div className=\"stepfour__bgbtn\">               \r\n                        {context.config.fondo === bg && \r\n                            <div className=\"btn__image\" onClick={()=>handleBg(bg)}>\r\n                                <img className=\"btn__image--selected\" src={'./data/fondo' + bg + '.png'}/>\r\n                            </div>\r\n                        }\r\n\r\n                        {context.config.fondo !== bg && \r\n                            <div className=\"btn__image\" onClick={()=>handleBg(bg)}>\r\n                                <img src={'./data/fondo' + bg + '.png'}/>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n            <button className=\"btn__medium\" onClick={handleFinish}>\r\n                TERMINAR\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n}\r\n    \r\nStepthree.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Stepthree;","import React from 'react';\r\nimport './Stepfour.css';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { v4 } from 'uuid';\r\nimport { saveAs } from 'file-saver';\r\n/* in ES 6 */\r\nimport domtoimage from 'dom-to-image';\r\n\r\n\r\nconst Stepfour = (props) => {\r\n\r\n    const context = React.useContext(SpidermanContext);\r\n    const history = useHistory();\r\n\r\n    //var domtoimage = require('dom-to-image');\r\n\r\n    // var bgs = [1,2,3];\r\n\r\n\r\n    const handleFinish = () => {\r\n        const newSpidey = {\r\n            id : context.config.id,\r\n            name : context.config.name,\r\n            actor : context.config.actor,\r\n            mask : context.config.mask,\r\n            accessory1 : context.config.accessory1,\r\n            accessory2 : context.config.accessory2,\r\n            accessory3 : context.config.accessory3,\r\n            suit : context.config.suit,\r\n            colorOne : context.config.colorOne,\r\n            colorTwo : context.config.colorTwo,\r\n            fondo : context.config.fondo,\r\n        };\r\n\r\n        context.setConfig({\r\n            id : '',\r\n            name : 'Mi primer Spiderman',\r\n            actor : 'tobey',\r\n            mask : true,\r\n            accessory1 : false,\r\n            accessory2 : false,\r\n            accessory3 : false,\r\n            suit : 1,\r\n            colorOne : 'rojo',\r\n            colorTwo : 'azul',\r\n            fondo : 1,\r\n        });\r\n\r\n        const index = context.list.findIndex((elem) => {\r\n            return elem.id === newSpidey.id;\r\n        });\r\n\r\n        if(index === -1){\r\n            newSpidey.id = v4();\r\n            context.setList([\r\n                ...context.list,\r\n                newSpidey,\r\n            ]);\r\n        } else {\r\n            context.setList([\r\n                ...context.list.slice(0,index),\r\n                newSpidey,\r\n                ...context.list.slice(index+1)\r\n            ]);\r\n        }\r\n        history.push('/galeria');\r\n    };\r\n\r\n    const handleDownload = () => {\r\n\r\n        domtoimage.toBlob(document.getElementById('download'))\r\n        .then(function (blob) {\r\n            window.saveAs(blob, context.config.name + '.png');\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className=\"stepfour__container\">\r\n\r\n            <p className=\"tittle\">¡TU PERSONAJE ESTÁ LISTO!</p>\r\n\r\n            <p className=\"text\">{context.config.name} se ha creado con éxito.</p>\r\n            \r\n            <button className=\"btn__medium\" onClick = {handleFinish}>\r\n                GUARDAR PERSONAJE\r\n            </button>\r\n\r\n            <button className=\"btn__medium\" onClick = {handleDownload}>\r\n                DESCARGAR\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n    \r\nStepfour.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Stepfour;","import React from 'react';\r\nimport './Create.css';\r\nimport { Link , Route, useHistory} from 'react-router-dom';\r\nimport Back from '../Back/Back';\r\nimport Stepone from '../Stepone/Stepone';\r\nimport Steptwo from '../Steptwo/Steptwo';\r\nimport Stepthree from '../Stepthree/Stepthree';\r\nimport Stepfour from '../Stepfour/Stepfour';\r\nimport Spiderman from '../Spiderman/Spiderman'\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\n\r\n\r\nconst Create = (props) => {\r\n\r\n    const history = useHistory();\r\n    const context = React.useContext(SpidermanContext);\r\n\r\n    console.log(props.match);\r\n\r\n    const handleStep = (step) => {\r\n        history.push('/crear/'+step);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"create__container\">\r\n            <div className=\"create__header\">\r\n                <div className=\"create__back\">\r\n                    <Link to=\"/\"><Back /></Link>\r\n                </div>\r\n                <div className=\"create__tittle\">\r\n                    <img src=\"./data/crea.png\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"create\">\r\n                \r\n                <div className=\"create__character\">\r\n                    <Spiderman \r\n                        id = {context.config.id}\r\n                        name = {context.config.name}\r\n                        actor = {context.config.actor} \r\n                        mask = {context.config.mask} \r\n                        accessory1 = {context.config.accessory1} \r\n                        accessory2 = {context.config.accessory2} \r\n                        accessory3 = {context.config.accessory3} \r\n                        suit = {context.config.suit} \r\n                        colorOne = {context.config.colorOne} \r\n                        colorTwo = {context.config.colorTwo} \r\n                        fondo = {context.config.fondo} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"create__options\">\r\n                    <Route path={[\"/crear\", \"/crear/pasouno\"]} exact component={Stepone}/>\r\n                    <Route path=\"/crear/pasodos\" component={Steptwo}/>\r\n                    <Route path=\"/crear/pasotres\" component={Stepthree}/>\r\n                    <Route path=\"/crear/pasocuatro\" component={Stepfour}/>\r\n                </div>\r\n                \r\n                <div className=\"create__menu\">\r\n\r\n                    <div className=\"btn__create btn__stepone\" onClick={()=> handleStep('pasouno')}>\r\n                        {/* <img src=\"./data/createbtn.png\"/> */}\r\n                    </div>\r\n                    <div className=\"btn__create btn__steptwo\" onClick={()=> handleStep('pasodos')}>\r\n                        {/* <img src=\"./data/createbtn.png\"/> */}\r\n                    </div>\r\n                    <div className=\"btn__create btn__stepthree\" onClick={()=> handleStep('pasotres')}>\r\n                        {/* <img src=\"./data/createbtn.png\"/> */}\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n    \r\nCreate.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Create;","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport Home from './Home/Home';\nimport Gallery from './Gallery/Gallery';\nimport Create from './Create/Create';\nimport { SpidermanContext } from './utils/SpidermanContext';\nimport { v4 } from 'uuid';\n\nfunction App() {\n\n  const [config, setConfig] = React.useState({\n    id : '',\n    name : 'Mi primer Spiderman',\n    actor : 'tobey',\n    mask : true,\n    accessory1 : false,\n    accessory2 : false,\n    accessory3 : false,\n    suit : 1,\n    colorOne : 'rojo',\n    colorTwo : 'azul',\n    fondo : 1,\n  })\n\n  const [list, setList] = React.useState([ ]);\n\n  const value = {\n    config : config,\n    setConfig : setConfig,\n    list : list,\n    setList : setList,\n  }\n\n  React.useEffect(()=>{\n    const listString = localStorage.getItem('list');\n    if (listString != null) {\n      setList(JSON.parse(listString));\n    }\n  }, []);\n\n  React.useEffect(()=>{\n    localStorage.setItem('list', JSON.stringify(list))\n  }, [list]);\n\n  return (\n    <div>\n      <SpidermanContext.Provider value = {value}>\n        <Router>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/galeria\" component={Gallery}/>\n          <Route path=\"/crear/:step?\" component={Create}/>\n        </Router>\n      </SpidermanContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}