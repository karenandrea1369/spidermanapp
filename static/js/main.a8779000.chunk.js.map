{"version":3,"sources":["Btn/Btn.js","Home/Home.js","utils/SpidermanContext.js","Back/Back.js","Spiderman/Spiderman.jsx","Gallery/Gallery.js","Stepone/Stepone.js","Steptwo/Steptwo.js","Stepthree/Stepthree.js","Stepfour/Stepfour.js","Create/Create.js","App.js","serviceWorker.js","index.js"],"names":["Btn","props","className","texto","Home","src","alt","to","SpidermanContext","React","config","id","name","actor","mask","accessory1","accessory2","accessory3","suit","colorOne","colorTwo","fondo","setConfig","list","setList","Back","href","dir","Spiderman","Gallery","context","useContext","history","useHistory","length","map","spidey","onClick","index","findIndex","elem","push","handleEditSpiderman","console","log","slice","handleDeleteSpiderman","Stepone","handleActor","TextField","label","value","onChange","event","target","type","checked","Steptwo","colors","handleSuit","handleColorOne","handleColorTwo","handleAccessory","accessory","acce","col","Stepthree","handleBg","bg","Stepfour","require","document","querySelector","newSpidey","v4","domtoimage","toBlob","getElementById","then","blob","window","saveAs","Create","match","path","exact","component","App","useState","useEffect","listString","localStorage","getItem","JSON","parse","setItem","stringify","Provider","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a8779000.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Btn.css';\r\n\r\nconst Btn = (props) => {\r\n    \r\n    \r\n    return (\r\n    <button className=\"btn\">{props.texto}</button>\r\n    );\r\n  }\r\n\r\n  Btn.propTypes = {\r\n    texto: PropTypes.string,\r\n}\r\n  \r\n  export default Btn;","import React from 'react';\r\nimport './Home.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Btn from '../Btn/Btn';\r\n\r\nfunction Home() {\r\n    return (\r\n      <div className=\"inicio\">\r\n\r\n        <img className=\"inicio__img\" src=\"./data/inicio.png\" alt=\" \"/>\r\n        <Link to=\"/crear/pasouno\"><Btn texto={\"CREA UNO\"} /></Link>\r\n        <Link to=\"/galeria\"><Btn texto={\"GALERÍA\"} /></Link>\r\n\r\n        \r\n\r\n        {/* <p className=\"inicio__copy\">© KAREN CASTAÑEDA</p> */}\r\n\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;","import * as React from 'react';\r\n\r\nexport const SpidermanContext = React.createContext({\r\n    config : {\r\n        id : '',\r\n        name : '',\r\n        actor : '/data/tobey.png',\r\n        mask : false,\r\n        accessory1 : false,\r\n        accessory2 : false,\r\n        accessory3 : false,\r\n        suit : 1,\r\n        colorOne : '',\r\n        colorTwo : '',\r\n        fondo : 1,\r\n      },\r\n    setConfig : () => null,\r\n\r\n    list : [],\r\n    setList : () => null,\r\n})","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Back.css';\r\n\r\nconst Back = (props) => {\r\n    return (\r\n        <a href={props.dir}>\r\n            <button className=\"back\">\r\n                <img className=\"back__img\" src=\"/data/back.png\"/>\r\n            </button>\r\n        </a>\r\n    );\r\n}\r\n    \r\nBack.propTypes = {\r\n    dir: PropTypes.string,\r\n}\r\n      \r\nexport default Back;","import React from 'react';\r\nimport './Spiderman.css';\r\nimport PropTypes from 'prop-types';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\n\r\nconst Spiderman = (props) => {\r\n\r\n//     const context = React.useContext(SpidermanContext);\r\n//     const handleEdit = (id)=>{\r\n//          onEdit(id);\r\n//     }\r\n\r\n//     const handleDelete = (id)=>{\r\n//         onEdit(id);\r\n//    }\r\n\r\n    return(\r\n        <div className=\"spiderman__container\" >\r\n            <div className=\"spiderman__charactername\">\r\n                <p>{props.name}</p>\r\n            </div>\r\n\r\n            <div className=\"spiderman__background\" id=\"download\">\r\n                <img className=\"spiderman__backgroundimg\" \r\n                src={'./data/fondo' + props.fondo + '.png'}/>\r\n\r\n                <div className=\"spiderman__body\" >\r\n                    <div className=\"character__accessory1\">\r\n                        {props.accessory1 && <img src = './data/accessory1.png'/>}\r\n                    </div>\r\n                    <div className=\"spiderman__head\">\r\n                        {props.mask && \r\n                        <img src = {'./data/mascara' + props.suit + '_color' + props.colorOne + '.png'}/>}\r\n                        {!props.mask && <img src= {'./data/' + props.actor + '.png'} />}\r\n                    </div>\r\n                    <div className=\"spiderman__color1\">\r\n                        <img src={'./data/traje' + props.suit + '_parte1_color' + props.colorOne + '.png'}/>\r\n                    </div>\r\n                    <div className=\"spiderman__color2\">\r\n                        <img src={'./data/traje' + props.suit + '_parte2_color' + props.colorTwo + '.png'}/>\r\n                    </div>\r\n                    <div className=\"character__accessory2\">\r\n                        {props.accessory2 && <img src = './data/accessory2.png'/>}\r\n                    </div>\r\n                    <div className=\"character__accessory3\">\r\n                        {props.accessory3 && <img src = './data/accessory3.png'/>}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {/* {onDelete && onEdit && <div>\r\n                <button onClick = {handleEdit}>Edit</button>\r\n                <button onClick = {handleEdit}>Delete</button>\r\n            </div>} */}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nSpiderman.propTypes = {\r\n    id : PropTypes.string,\r\n    name : PropTypes.string,\r\n    actor : PropTypes.string,\r\n    mask : PropTypes.bool,\r\n    accessory1 : PropTypes.bool,\r\n    accessory2 : PropTypes.bool,\r\n    accessory3 : PropTypes.bool,\r\n    suit : PropTypes.number,\r\n    colorOne : PropTypes.string,\r\n    colorTwo : PropTypes.string,\r\n    fondo : PropTypes.number,\r\n    // onEdit : PropTypes.func,\r\n    // onDelete : PropTypes.func,\r\n}\r\n      \r\nexport default Spiderman;","import React from 'react';\r\nimport './Gallery.css';\r\nimport { Link , Route, useHistory} from 'react-router-dom';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\nimport Back from '../Back/Back';\r\nimport Btn from '../Btn/Btn';\r\nimport Spiderman from '../Spiderman/Spiderman';\r\n\r\nconst Gallery = (props) => {\r\n\r\n    const context = React.useContext(SpidermanContext);\r\n    const history = useHistory()\r\n    const btn1 = \"CREA UNO\";\r\n\r\n    const handleEditSpiderman = (id)=>{\r\n        // onEdit(id);\r\n        const index = context.list.findIndex((elem) => {\r\n            return elem.id === id;\r\n        });\r\n        \r\n        const spidey = context.list[index];\r\n\r\n        context.setConfig({\r\n            id : spidey.id,\r\n            name : spidey.name,\r\n            actor : spidey.actor,\r\n            mask : spidey.mask,\r\n            accessory1 : spidey.accessory1,\r\n            accessory2 : spidey.accessory2,\r\n            accessory3 : spidey.accessory3,\r\n            suit : spidey.suit,\r\n            colorOne : spidey.colorOne,\r\n            colorTwo : spidey.colorTwo,\r\n            fondo : spidey.fondo,\r\n        });\r\n\r\n        history.push('/crear/pasouno');\r\n\r\n        // context.setList([\r\n        //     ...context.list.slice(0 , index),\r\n        //     ...context.list.slice(index + 1),\r\n        // ])\r\n    }\r\n\r\n    const handleDeleteSpiderman = (id)=>{\r\n        // onEdit(id);\r\n        const index = context.list.findIndex((elem) => {\r\n            return elem.id === id;\r\n        });\r\n        console.log()\r\n        context.setList([\r\n            ...context.list.slice(0 , index),\r\n            ...context.list.slice(index + 1),\r\n        ])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"gallery__header\">\r\n                <div className=\"gallery__back\">\r\n                    <Link to=\"/\"><Back /></Link>\r\n                </div>\r\n                <div className=\"gallery__tittle\">\r\n                    <img src=\"/data/galeria.png\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"gallery\">\r\n\r\n                {context.list.length=== 0 &&\r\n                    <div className=\"gallery__empty\">\r\n                        <img className=\"gallery__emptyimg\" src=\"./data/empty.png\"/>\r\n                        <div className=\"gallery__emptybtn\">\r\n                            <Link to=\"/crear/pasouno\"><Btn texto={\"CREA UNO\"} /></Link>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {context.list.length > 0 &&\r\n                    <div className=\"module__container\">                    \r\n                        {context.list.map(spidey => {\r\n                            return(\r\n                            <div className=\"module\">    \r\n                                <Spiderman \r\n                                    id = {spidey.id}\r\n                                    name = {spidey.name}\r\n                                    actor = {spidey.actor} \r\n                                    mask = {spidey.mask} \r\n                                    accessory1 = {spidey.accessory1} \r\n                                    accessory2 = {spidey.accessory2} \r\n                                    accessory3 = {spidey.accessory3} \r\n                                    suit = {spidey.suit} \r\n                                    colorOne = {spidey.colorOne} \r\n                                    colorTwo = {spidey.colorTwo} \r\n                                    fondo = {spidey.fondo}\r\n                                />\r\n                                <div>\r\n                                    <button onClick={()=>handleEditSpiderman(spidey.id)}>Editar</button>\r\n                                    <button onClick={()=>handleDeleteSpiderman(spidey.id)}>Eliminar</button>\r\n                                </div>\r\n                            </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                }\r\n                \r\n\r\n            </div>\r\n\r\n             {/* --------------- EMPTY STATE --------------- */}\r\n            {/*\r\n            <div className=\"gallery__empty\">\r\n                <img className=\"gallery__emptyimg\" src=\"/data/empty.png\"/>\r\n                <div className=\"gallery__emptybtn\">\r\n                    <Btn texto={btn1}/>\r\n                </div>\r\n            </div>\r\n            */}\r\n        </div>\r\n    );\r\n}\r\n    \r\nGallery.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Gallery;","import React from 'react';\r\nimport './Stepone.css';\r\nimport {TextField, Typography} from '@material-ui/core';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\n\r\nconst Stepone = (props) => {\r\n\r\n    const context = React.useContext(SpidermanContext);\r\n    var actors = ['tobey', 'andrew', 'tom'];\r\n    \r\n    const handleName = (event) => {\r\n        context.setConfig({\r\n            ...context.config,\r\n            name : event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleMask = (event) => {\r\n        // if(!context.config.actor && context.config.mask){\r\n        if(context.config.mask){\r\n            context.setConfig({\r\n                ...context.config,\r\n                mask : false,\r\n                // actor : 'tobey',\r\n            })\r\n        } else {\r\n            context.setConfig({\r\n                ...context.config,\r\n                mask : true,\r\n                // actor : '',\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    const handleActor = (actor) => {\r\n\r\n        if(context.config.actor === actor){\r\n            if(context.config.mask){\r\n                context.setConfig({\r\n                   ...context.config,\r\n                   mask : false,\r\n                })\r\n            } else {\r\n                context.setConfig({\r\n                    ...context.config,\r\n                    mask : true,\r\n                }) \r\n            }\r\n        } else if(context.config.actor !== actor){\r\n             context.setConfig({\r\n                 ...context.config,\r\n                 actor : actor,\r\n                 mask : false,\r\n             })\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <p>NOMBRE DE TU PERSONAJE</p>\r\n            <TextField \r\n                label =\"Nombre\"\r\n                value = {context.config.name}\r\n                onChange = {handleName}\r\n            />\r\n\r\n            <p>MÁSCARA</p>\r\n            <input type=\"checkbox\" onChange={handleMask} checked={context.config.mask}/>\r\n\r\n            <p>ESCOGE TU ACTOR FAVORITO</p>\r\n            <div className=\"stepone__actors\">\r\n                {actors.map(actor =>{\r\n                    return <div className=\"stepone__actorbtn\">               \r\n                        {!context.config.mask && context.config.actor === actor &&\r\n                        <button className=\"stepone__facebtn stepone__facebtn--selected\" onClick={()=>handleActor(actor)}>\r\n                            <img src={'./data/' + actor + 'btn.png'} />\r\n                        </button>\r\n                        }\r\n\r\n                        {(context.config.mask || context.config.actor !== actor) &&\r\n                        <button className=\"stepone__facebtn\" onClick={()=>handleActor(actor)}>\r\n                            <img src={'./data/' + actor + 'btn.png'} />\r\n                        </button>\r\n                        }\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n    \r\nStepone.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Stepone;","import React from 'react';\r\nimport './Steptwo.css';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\n\r\nconst Steptwo = (props) => {\r\n\r\n    var suits = [1,2,3,4];\r\n    var colors = ['rojo', 'azul', 'negro'];\r\n    var accesories = [1, 2, 3];\r\n    \r\n    const context = React.useContext(SpidermanContext);\r\n\r\n    const handleSuit = (suit) => {\r\n        context.setConfig({\r\n            ...context.config,\r\n            suit : suit,\r\n        })\r\n    };\r\n\r\n    const handleColorOne = (colorOne) => {\r\n        context.setConfig({\r\n            ...context.config,\r\n            colorOne : colorOne,\r\n        })\r\n    };\r\n\r\n    const handleColorTwo = (colorTwo) => {\r\n        context.setConfig({\r\n            ...context.config,\r\n            colorTwo : colorTwo,\r\n        })\r\n    };\r\n\r\n    const handleAccessory = (accessory) => {\r\n        var acce = 'accessory' + accessory;\r\n            context.setConfig({\r\n             ...context.config,\r\n             [acce] : !context.config[acce],\r\n         })\r\n    };\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n            <p>TRAJE</p>\r\n            <div className=\"stepthree__suits\">\r\n                {suits.map(suit =>{\r\n                    return <div className=\"stepthree__suitbtn\">               \r\n                        {context.config.suit === suit && \r\n                            <button className=\"stepthree__suitbtn--selected\" onClick={()=>handleSuit(suit)}>\r\n                                <img src={'./data/suit' + suit + '.png'}/>\r\n                            </button>\r\n                        }\r\n\r\n                        {context.config.suit !== suit && \r\n                            <button onClick={()=>handleSuit(suit)}>\r\n                                <img src={'./data/suit' + suit + '.png'}/>\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                })}\r\n            </div>\r\n            \r\n\r\n            <div className=\"stepthree__colors\">\r\n                <div>\r\n                    <p>COLOR PRIMARIO</p>\r\n                    <div className=\"stepthree__colorbuttons\">\r\n                        {colors.map(col =>{\r\n                            return <div className=\"stepthree__colorbtn\">               \r\n                                {context.config.colorOne === col && \r\n                                    <button className=\"stepthree__colorbtn--selected\" onClick={()=>handleColorOne(col)}>\r\n                                        <img src={'./data/' + col + 'btn.png'}/>\r\n                                    </button>\r\n                                }\r\n\r\n                                {context.config.colorOne !== col && \r\n                                    <button onClick={()=>handleColorOne(col)}>\r\n                                        <img src={'./data/' + col + 'btn.png'}/>\r\n                                    </button>\r\n                                }\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p>COLOR SECUNDARIO</p>\r\n                    <div className=\"stepthree__colorbuttons\">\r\n                        {colors.map(col =>{\r\n                            return <div className=\"stepthree__colorbtn\">               \r\n                                {context.config.colorTwo === col && \r\n                                    <button className=\"stepthree__colorbtn--selected\" onClick={()=>handleColorTwo(col)}>\r\n                                        <img src={'./data/' + col + 'btn.png'}/>\r\n                                    </button>\r\n                                }\r\n\r\n                                {context.config.colorTwo !== col && \r\n                                    <button onClick={()=>handleColorTwo(col)}>\r\n                                        <img src={'./data/' + col + 'btn.png'}/>\r\n                                    </button>\r\n                                }\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* ---------------Accesorios---------------- */}\r\n\r\n            <p>ACCESORIOS</p>\r\n\r\n            <div className=\"steptwo__accessories\">\r\n                {accesories.map( accessory =>{\r\n                    return <div className=\"steptwo__accessorybtn\">\r\n                        \r\n                        {context.config['accessory' + accessory] &&\r\n                            <button className=\"stepone__facebtn button__selected\" onClick={()=>handleAccessory(accessory)}>\r\n                                <img src={'./data/btnAccessory' + accessory + '.png'} />\r\n                            </button>\r\n                        }\r\n\r\n                        {!context.config['accessory' + accessory] &&\r\n                            <button className=\"stepone__facebtn \" onClick={()=>handleAccessory(accessory)}>\r\n                                <img src={'./data/btnAccessory' + accessory + '.png'} />\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n    \r\nSteptwo.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Steptwo;\r\n\r\n// Otra forma de hacer lo de la máscara con énfasis en la máscara\r\n// if(context.config.mask){\r\n        //     context.setConfig({\r\n        //          ...context.config,\r\n        //          actor : actor,\r\n        //          mask : false,\r\n        //     })\r\n        // } else {\r\n        //     if(context.config.actor === actor){\r\n        //         context.setConfig({\r\n        //             ...context.config,\r\n        //             mask : true,\r\n        //        })\r\n        //     } else {\r\n        //         context.setConfig({\r\n        //             ...context.config,\r\n        //             actor : actor,\r\n        //        })\r\n        //     }\r\n        // }","import React from 'react';\r\nimport './Stepthree.css';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { v4 } from 'uuid';\r\n\r\nconst Stepthree = (props) => {\r\n\r\n    const context = React.useContext(SpidermanContext);\r\n    const history = useHistory();\r\n\r\n    var bgs = [1,2,3];\r\n\r\n    const handleBg = (fondo) => {\r\n        context.setConfig({\r\n            ...context.config,\r\n            fondo : fondo,\r\n        })\r\n    };\r\n\r\n    // const handleFinish = () => {\r\n    //     const newSpidey = {\r\n    //         id : context.config.id,\r\n    //         name : context.config.name,\r\n    //         actor : context.config.actor,\r\n    //         mask : context.config.mask,\r\n    //         accessory1 : context.config.accessory1,\r\n    //         accessory2 : context.config.accessory2,\r\n    //         accessory3 : context.config.accessory3,\r\n    //         suit : context.config.suit,\r\n    //         colorOne : context.config.colorOne,\r\n    //         colorTwo : context.config.colorTwo,\r\n    //         fondo : context.config.fondo,\r\n    //     };\r\n\r\n    //     context.setConfig({\r\n    //         id : '',\r\n    //         name : 'Mi primer Spiderman',\r\n    //         actor : 'tobey',\r\n    //         mask : true,\r\n    //         accessory1 : false,\r\n    //         accessory2 : false,\r\n    //         accessory3 : false,\r\n    //         suit : 1,\r\n    //         colorOne : 'rojo',\r\n    //         colorTwo : 'azul',\r\n    //         fondo : 1,\r\n    //     });\r\n\r\n    //     const index = context.list.findIndex((elem) => {\r\n    //         return elem.id === newSpidey.id;\r\n    //     });\r\n\r\n    //     if(index === -1){\r\n    //         newSpidey.id = v4();\r\n    //         context.setList([\r\n    //             ...context.list,\r\n    //             newSpidey,\r\n    //         ]);\r\n    //     } else {\r\n    //         context.setList([\r\n    //             ...context.list.slice(0,index),\r\n    //             newSpidey,\r\n    //             ...context.list.slice(index+1)\r\n    //         ]);\r\n    //     }\r\n    //     history.push('/crear/pasocuatro');\r\n    // };\r\n\r\n    const handleFinish = () => {\r\n        history.push('/crear/pasocuatro');\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p>FONDO</p>\r\n            <div className=\"stepfour__bgs\">\r\n                {bgs.map(bg =>{\r\n                    return <div className=\"stepfour__bgbtn\">               \r\n                        {context.config.fondo === bg && \r\n                            <button className=\"stepfour__bgbtn--selected\" onClick={()=>handleBg(bg)}>\r\n                                <img src={'./data/fondo' + bg + '.png'}/>\r\n                            </button>\r\n                        }\r\n\r\n                        {context.config.fondo !== bg && \r\n                            <button onClick={()=>handleBg(bg)}>\r\n                                <img src={'./data/fondo' + bg + '.png'}/>\r\n                            </button>\r\n                        }\r\n                    </div>\r\n                })}\r\n            </div>\r\n\r\n            <button onClick={handleFinish}>\r\n                TERMINAR\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n}\r\n    \r\nStepthree.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Stepthree;","import React from 'react';\r\nimport './Stepfour.css';\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\nimport { useHistory} from 'react-router-dom';\r\nimport { v4 } from 'uuid';\r\nimport { saveAs } from 'file-saver';\r\n/* in ES 6 */\r\nimport domtoimage from 'dom-to-image';\r\n\r\n\r\nconst Stepfour = (props) => {\r\n    var FileSaver = require('file-saver');\r\n\r\n    const context = React.useContext(SpidermanContext);\r\n    const history = useHistory();\r\n    var node = document.querySelector('prueba');\r\n\r\n    //var domtoimage = require('dom-to-image');\r\n\r\n    // var bgs = [1,2,3];\r\n\r\n\r\n    const handleFinish = () => {\r\n        const newSpidey = {\r\n            id : context.config.id,\r\n            name : context.config.name,\r\n            actor : context.config.actor,\r\n            mask : context.config.mask,\r\n            accessory1 : context.config.accessory1,\r\n            accessory2 : context.config.accessory2,\r\n            accessory3 : context.config.accessory3,\r\n            suit : context.config.suit,\r\n            colorOne : context.config.colorOne,\r\n            colorTwo : context.config.colorTwo,\r\n            fondo : context.config.fondo,\r\n        };\r\n\r\n        context.setConfig({\r\n            id : '',\r\n            name : 'Mi primer Spiderman',\r\n            actor : 'tobey',\r\n            mask : true,\r\n            accessory1 : false,\r\n            accessory2 : false,\r\n            accessory3 : false,\r\n            suit : 1,\r\n            colorOne : 'rojo',\r\n            colorTwo : 'azul',\r\n            fondo : 1,\r\n        });\r\n\r\n        const index = context.list.findIndex((elem) => {\r\n            return elem.id === newSpidey.id;\r\n        });\r\n\r\n        if(index === -1){\r\n            newSpidey.id = v4();\r\n            context.setList([\r\n                ...context.list,\r\n                newSpidey,\r\n            ]);\r\n        } else {\r\n            context.setList([\r\n                ...context.list.slice(0,index),\r\n                newSpidey,\r\n                ...context.list.slice(index+1)\r\n            ]);\r\n        }\r\n        history.push('/galeria');\r\n    };\r\n\r\n    const handleDownload = () => {\r\n        // domtoimage.toPng(node)\r\n        // .then(function (dataUrl) {\r\n        //     var img = new Image();\r\n        //     img.src = dataUrl;\r\n        //     document.body.appendChild(img);\r\n        // })\r\n        // .catch(function (error) {\r\n        //     console.error('oops, something went wrong!', error);\r\n        // });\r\n\r\n        domtoimage.toBlob(document.getElementById('download'))\r\n        .then(function (blob) {\r\n            window.saveAs(blob, context.config.name + '.png');\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className=\"pruebaxde\">\r\n            \r\n            <button onClick = {handleFinish}>\r\n                GUARDAR PERSONAJE\r\n            </button>\r\n\r\n            <button onClick = {handleDownload}>\r\n                DESCARGAR\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n    \r\nStepfour.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Stepfour;","import React from 'react';\r\nimport './Create.css';\r\nimport { Link , Route} from 'react-router-dom';\r\nimport Back from '../Back/Back';\r\nimport Stepone from '../Stepone/Stepone';\r\nimport Steptwo from '../Steptwo/Steptwo';\r\nimport Stepthree from '../Stepthree/Stepthree';\r\nimport Stepfour from '../Stepfour/Stepfour';\r\nimport Spiderman from '../Spiderman/Spiderman'\r\nimport { SpidermanContext } from '../utils/SpidermanContext';\r\n\r\n\r\nconst Create = (props) => {\r\n\r\n    const context = React.useContext(SpidermanContext);\r\n\r\n    console.log(props.match);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"create__header\">\r\n                <div className=\"create__back\">\r\n                    <Link to=\"/\"><Back /></Link>\r\n                </div>\r\n                <div className=\"create__tittle\">\r\n                    <img src=\"./data/crea.png\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"create\">\r\n                \r\n                <div className=\"create__character\">\r\n                    <Spiderman \r\n                        id = {context.config.id}\r\n                        name = {context.config.name}\r\n                        actor = {context.config.actor} \r\n                        mask = {context.config.mask} \r\n                        accessory1 = {context.config.accessory1} \r\n                        accessory2 = {context.config.accessory2} \r\n                        accessory3 = {context.config.accessory3} \r\n                        suit = {context.config.suit} \r\n                        colorOne = {context.config.colorOne} \r\n                        colorTwo = {context.config.colorTwo} \r\n                        fondo = {context.config.fondo} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"create__options\">\r\n                    <Route path={[\"/crear\", \"/crear/pasouno\"]} exact component={Stepone}/>\r\n                    <Route path=\"/crear/pasodos\" component={Steptwo}/>\r\n                    <Route path=\"/crear/pasotres\" component={Stepthree}/>\r\n                    <Route path=\"/crear/pasocuatro\" component={Stepfour}/>\r\n                </div>\r\n                \r\n                <div className=\"create__menu\">\r\n\r\n                    <Link to=\"/crear/pasouno\"><img src=\"./data/createbtn.png\"/></Link>\r\n                    <Link to=\"/crear/pasodos\"><img src=\"./data/createbtn.png\"/></Link>\r\n                    <Link to=\"/crear/pasotres\"><img src=\"./data/createbtn.png\"/></Link>\r\n                    {/* <Link to=\"/crear/pasocuatro\"><img src=\"./data/createbtn.png\"/></Link> */}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n    \r\nCreate.propTypes = {\r\n    \r\n}\r\n      \r\nexport default Create;","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport Home from './Home/Home';\nimport Gallery from './Gallery/Gallery';\nimport Create from './Create/Create';\nimport { SpidermanContext } from './utils/SpidermanContext';\nimport { v4 } from 'uuid';\n\nfunction App() {\n\n  const [config, setConfig] = React.useState({\n    id : '',\n    name : 'Mi primer Spiderman',\n    actor : 'tobey',\n    mask : true,\n    accessory1 : false,\n    accessory2 : false,\n    accessory3 : false,\n    suit : 1,\n    colorOne : 'rojo',\n    colorTwo : 'azul',\n    fondo : 1,\n  })\n\n  const [list, setList] = React.useState([ ]);\n\n  const value = {\n    config : config,\n    setConfig : setConfig,\n    list : list,\n    setList : setList,\n  }\n\n  React.useEffect(()=>{\n    const listString = localStorage.getItem('list');\n    if (listString != null) {\n      setList(JSON.parse(listString));\n    }\n  }, []);\n\n  React.useEffect(()=>{\n    localStorage.setItem('list', JSON.stringify(list))\n  }, [list]);\n\n  return (\n    <div>\n      <SpidermanContext.Provider value = {value}>\n        <Router>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/galeria\" component={Gallery}/>\n          <Route path=\"/crear/:step?\" component={Create}/>\n        </Router>\n      </SpidermanContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}